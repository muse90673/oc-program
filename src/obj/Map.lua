---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by ThinkPad E475.
--- DateTime: 2019/4/21 18:21
---

local fs = require("filesystem")
local seri = require("serialization")
local Map = {}
Map.chunk = {}
-- 记录不存在的地图块
Map.non_chunk = {}
Map.girdX = 8
Map.girdY = 8
Map.girdZ = 8


function Map:getPosInfo(x,y,z)
    local cx = (x-(x%self.girdX))/self.girdX
    local cy = (y-(y%self.girdY))/self.girdY
    local cz = (z-(z%self.girdZ))/self.girdZ
    local map = self:getChunk(cx,cy,cz)
    if map then
        return map[(x-cx*self.girdX)+(y-cy*self.girdY)*self.girdX+(z-cz*self.girdZ)*self.girdX*self.girdY]
    end
    return nil
end

function Map:setPosInfo(x,y,z,info)
    local cx = (x-(x%self.girdX))/self.girdX
    local cy = (y-(y%self.girdY))/self.girdY
    local cz = (z-(z%self.girdZ))/self.girdZ
    local map = self:getChunk(cx,cy,cz)
    if map then
        map[(x-cx*self.girdX)+(y-cy*self.girdY)*self.girdX+(z-cz*self.girdZ)*self.girdX*self.girdY]=info
        return true
    else
        return false
    end
end

function Map:getChunk(x,y,z)
    -- 查找内存
    -- 如果没有则查找磁盘
    -- 如果没有则请求服务器
    -- 如果服务器没有，则在map里记录这块地图不存在
    local ck = self.chunk[tostring(x+0)..","..tostring(y+0)..","..tostring(z+0)]
    if ck then
        return ck
    else
        ck = self:getChunkFromFile(x,y,z)
        if ck then
            -- 将地图块放进内存
            self.chunk[tostring(x+0)..","..tostring(y+0)..","..tostring(z+0)]=ck
            return ck
        end
    end
    -- 请求扫描地图
    --error("request scan")
    return nil
end

function Map:getChunkFromFile(x,y,z)
    local path = "/mapdata/"..tostring(z+0).."/"..tostring(y+0).."/"..tostring(x+0)
    if fs.exists(path) then
        local s = ""
        for line in io.lines(path) do
            s = s..line
        end
        local ck = seri.unserialize(s)
        return ck
    end
    return nil
end

function Map:hasChunk(x,y,z)
    if self.chunk[tostring(x+0)..","..tostring(y+0)..","..tostring(z+0)] then
        return true
    end
    local path = "/mapdata/"..tostring(z+0).."/"..tostring(y+0).."/"..tostring(x+0)
    if fs.exists(path) then
        return true
    end
    return false
end

function Map:saveChunk(x,y,z,chunks)
    local path = "/mapdata/"..tostring(z+0).."/"..tostring(y+0).."/"
    fs.makeDirectory(path)
    print("crate dir:"..path)
    local f = io.open(path..tostring(x+0), "w")
    local ck = seri.serialize(chunks)
    f:write(ck)
    f:close()
end

return Map